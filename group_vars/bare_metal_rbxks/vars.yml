---
admin_base_homedir: "{{ vault_admin_base_homedir }}"
admin_gecos: "{{ vault_admin_gecos }}"
admin_password: "{{ vault_admin_password }}"
admin_ssh_key: "{{ vault_admin_ssh_key }}"
admin_ssh_key_userdata: "{{ vault_admin_ssh_key_userdata }}"
admin_user: "{{ vault_admin_user }}"
ansible_become_password: "{{ vault_ansible_become_password }}"
ansible_ssh_host_key_checking: false # Note: this should be true in production
ansible_ssh_port: "{{ vault_ansible_ssh_port }}"
ansible_ssh_user: "{{ vault_ansible_ssh_user }}"
env_config_net: "{{ vault_env_config_net }}"
env_default_params: "{{ vault_env_default_params }}"
env_domain_addresses: "{{ vault_env_domain_addresses }}"
env_domain_creation_params: "{{ vault_env_domain_creation_params }}"
env_domain_forwards: "{{ vault_env_domain_forwards }}"
fallback_dns: "{{ vault_fallback_dns }}"
libvirt_client_ssh_key: "{{ vault_libvirt_client_ssh_key }}"
libvirt_client_user: "{{ vault_libvirt_client_user }}"
libvirt_os_base_image_name: debian-11-generic-amd64-20221219-1234.qcow2
libvirt_os_cloud_image_sha512sums_url: "https://cloud.debian.org/images/cloud/bullseye/20221219-1234/SHA512SUMS"
libvirt_os_cloud_image_url: "https://cloud.debian.org/images/cloud/bullseye/20221219-1234/debian-11-generic-amd64-20221219-1234.qcow2"
libvirt_pool_base_images: "{{ host_libvirt_pool_base_images }}"
libvirt_pool_base_images_path: "{{ host_libvirt_pool_base_images_path }}"
libvirt_pool_cloud_init: "{{ host_libvirt_pool_cloud_init }}"
libvirt_pool_cloud_init_path: "{{ host_libvirt_pool_cloud_init_path }}"
libvirtd_pool_list: "{{ vault_libvirtd_pool_list | default(None) }}"
local_freshclam_mirror: "{{ host_local_freshclam_mirror | default(None) }}"
remote_admin_ip: "{{ vault_remote_admin_ip | default(None) }}"
remote_ignore_ips: "{{ remote_admin_ip }}{% if remote_monitoring_ips is defined %} {{ remote_monitoring_ips }}{% endif %}"
remote_monitoring_ips: "{{ vault_remote_monitoring_ips | default([]) }}"
v6natnet_ula: "{{ vault_v6natnet_ula | default(None) }}"
env_default_userdata:
  kss:
    apt:
      preserve_sources_list: true
      http_proxy: "{{ vault_env_default_userdata['kss']['apt']['http_proxy'] }}"
    groups:
    - adm
    - sudo
    - sudonp
    - sys
    ntp_servers:
    - "{{ vault_env_config_net['kss']['v4nat_addr'] }}"
    - "{{ vault_env_config_net['kss']['v6nat_addr'] }}"
    packages:
    - molly-guard
    - powermgmt-base
    - python3-gi
    - ufw
    - unattended-upgrades
    runcmd_before:
    - [set, -xe]
    - [systemctl, reload, apparmor]
    runcmd_after:
    - [bash, /run/ci-files/conf-ufw]
    - [systemctl, daemon-reload]
    - [systemctl, restart, networking]
    - [rm, -rf, /run/ci-files]
    users:
    - name: "{{ env_default_params['kss']['admin_user'] }}"
      gecos: "{{ env_default_params['kss']['admin_gecos'] }}"
      groups:
      - adm
      - sudo
      - sudonp
      homedir: "{{ env_default_params['kss']['admin_base_homedir'] }}/{{ env_default_params['kss']['admin_user'] }}"
      lock_passwd: true
      shell: /bin/bash
      ssh_authorized_keys:
      - no-agent-forwarding,no-port-forwarding {{ env_default_params['kss']['admin_ssh_key_userdata'] }}
    write_files: "{{ role_write_files }}"
    # So lookups don't error when we aren't handling userdata
...
