---
- hosts: bastions
  gather_facts: false
  pre_tasks:
  - name: Ensure given environment is valid
    ansible.builtin.assert:
      that:
      - envname in group_names
      quiet: true
      fail_msg: "{{ envname | quote }} is not a valid envname (environment)"

- hosts: bastions
  gather_facts: true
  any_errors_fatal: true
  roles:
  - packages_base
  - user_bastion_user_add
  - packages_ssh_proxy
  - fail2ban_ssh
  - packages_firmware

- hosts: all
  gather_facts: true
  roles:
  - user_admin_add_password

- hosts: edge_hosts
  roles:
  - fail2ban

- hosts: all:!libvirtd_hosts:!bastions
  # Avoid connectivity issues by not rebooting vm host or bastion
  roles:
  - packages_base
  - packages_firmware

- hosts: backup_clients:&ovh_bhs
  roles:
  - backup_ovh

- hosts: backup_clients
  roles:
  - backup_restic

- hosts: cert_private:&ssl_private_clients
  roles:
  - cert_private_client

- hosts: cert_private:&ssl_private_servers
  roles:
  - cert_private_server

- hosts: internal_mxes
  roles:
  - postfix_mx_internal

- hosts: mailbox_servers
  roles:
  - dovecot
  vars:
    instance_name: "{{ (env_guest_userdata[envname] | dict2items | selectattr('value.fqdn', 'equalto', inventory_hostname)).0.key }}"
    health_check_port_dovecot: "{{ libvirt_guest_definitions[envname][instance_name]['health_check_port_dovecot'] }}"
    imap_port: "{{ libvirt_guest_definitions[envname][instance_name]['imap_port'] }}"
    lmtp_port: "{{ libvirt_guest_definitions[envname][instance_name]['lmtp_port'] }}"
    remote_monitoring_ips: "{{ env_conn_admin[envname]['remote_monitoring_ips'] }}"
    submission_port: "{{ libvirt_guest_definitions[envname][instance_name]['submission_port_public'] }}"

- hosts: email_internal_senders:!internal_mxes
  roles:
  - postfix_sender_internal

- hosts: rproxy_external
  roles:
  - haproxy

- hosts: website_servers:rproxy_internal
  roles:
  - apache2_proxy_protocol
...
