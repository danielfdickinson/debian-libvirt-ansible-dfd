---
- name: Enable Apache2 modules needed by our static webhost
  become: yes
  community.general.apache2_module:
    name: "{{ item }}"
    state: present
  loop:
  - ssl
  - brotli
  - expires
  - headers
  - http2
  - ratelimit
  notify: Restart Apache2
- name: Update port on which apache listens
  become: yes
  ansible.builtin.copy:
    dest: /etc/apache2/ports.conf
    group: root
    mode: "0644"
    owner: root
    src: ports.conf
  notify: Restart Apache2
- name: Disable Apache2 module not required on our static webhost
  become: yes
  community.general.apache2_module:
    name: "{{ item }}"
    force: true
    state: absent
  loop:
  - access_compat
  - autoindex
  - authz_user
  - authn_file
  - auth_basic
  - authn_core
  notify: Restart Apache2
- name: Disable Debian default site for Apache2
  become: yes
  ansible.builtin.file:
    path: /etc/apache2/sites-enabled/000-default.conf
    state: absent
  notify: Restart Apache2
- name: Disable CGI serving
  become: yes
  ansible.builtin.file:
    path: /etc/apache2/conf-enabled/serve-cgi-bin.conf
    state: absent
  notify: Restart Apache2
- name: Configure SSL for connection from upstream reverse proxy
  # We don't need a non SSL vhost because we are behind a reverse proxy
  # If we want auth, we also do that on the reverse proxy, not here
  become: yes
  ansible.builtin.template:
    dest: /etc/apache2/conf-available/private-ssl.conf
    group: root
    mode: "0644"
    owner: root
    src: private-ssl.conf.j2
  notify: Restart Apache2
- name: Enable SSL for connection from upstream reverse proxy
  become: yes
  ansible.builtin.file:
    path: /etc/apache2/conf-enabled/private-ssl.conf
    src: /etc/apache2/conf-available/private-ssl.conf
    state: link
  notify: Restart Apache2
- name: Configure VHosts
  become: yes
  loop: "{{ websites_static }}"
  ansible.builtin.template:
    dest: /etc/apache2/sites-available/{{ item.fqdn }}.conf
    group: root
    mode: "0644"
    owner: root
    src: vhost.conf.j2
  notify: Restart Apache2
- name: Enable VHosts
  become: yes
  loop: "{{ websites_static }}"
  ansible.builtin.file:
    path: /etc/apache2/sites-enabled/{{ item.fqdn }}.conf
    src: /etc/apache2/sites-available/{{ item.fqdn }}.conf
    state: link
  notify: Restart Apache2
- name: Allow HTTPS in
  become: yes
  community.general.ufw:
    rule: allow
    direction: in
    proto: tcp
    port: 443
...
