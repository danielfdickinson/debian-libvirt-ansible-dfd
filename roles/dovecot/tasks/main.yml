---
- name: Configure dovecot as mailbox server
  become: yes
  block:
  - name: Set base mail directory permissions to allow autocreation of homes
    ansible.builtin.file:
      group: root
      mode: "1777"
      owner: root
      path: /var/vmail
  - name: Ensure dovecot packages present
    ansible.builtin.apt:
      name:
      - dovecot-core
      - dovecot-imapd
      - dovecot-lmtpd
      - dovecot-submissiond
  - name: Create dovecot authentication config
    ansible.builtin.copy:
      dest: /etc/dovecot/conf.d/10-auth.conf
      group: root
      mode: "0644"
      owner: root
      src: dovecot-conf.d/10-auth.conf
    notify: Reload dovecot configuration
  - name: Create dovecot password file config
    ansible.builtin.copy:
      dest: /etc/dovecot/conf.d/auth-passwdfile.conf.ext
      group: root
      mode: "0644"
      owner: root
      src: dovecot-conf.d/auth-passwdfile.conf.ext
    notify: Reload dovecot configuration
  - name: Configure dovecot listeners
    ansible.builtin.template:
      dest: /etc/dovecot/conf.d/10-master.conf
      group: root
      mode: "0644"
      owner: root
      src: dovecot-conf.d/10-master.conf.j2
    notify: Restart dovecot
  - name: Configure dovecot local overrides to config
    ansible.builtin.template:
      dest: /etc/dovecot/local.conf
      group: root
      mode: "0644"
      owner: root
      src: dovecot-local.conf.j2
    notify: Reload dovecot configuration
  - name: Configure dovecot users
    ansible.builtin.template:
      dest: /etc/dovecot/users
      group: dovecot
      mode: "0640"
      owner: mail
      src: users.j2
    notify: Reload dovecot configuration
- name: Allow access to Dovecot through firewall
  become: yes
  block:
  - name: Allow health check from gate
    community.general.ufw:
      rule: allow
      interface: ens3
      direction: in
      proto: tcp
      src: "{{ hostvars[item]['ansible_facts']['ens3']['ipv4']['address'] }}"
      dest: "{{ ansible_facts['ens3']['ipv4']['address'] }}"
      to_port: "{{ dovecot_health_check_port }}"
    loop: "{{ groups['rproxy_external'] }}"
  - name: Allow IMAP when proxied through gate
    community.general.ufw:
      rule: allow
      interface: ens3
      direction: in
      proto: tcp
      src: "{{ hostvars[item]['ansible_facts']['ens3']['ipv4']['address'] }}"
      dest: "{{ ansible_facts['ens3']['ipv4']['address'] }}"
      to_port: "{{ proxied_imap_port }}"
    loop: "{{ groups['rproxy_external'] }}"
    # - name: Allow Submission when proxied through gate
    #   community.general.ufw:
    #     rule: allow
    #     interface: ens3
    #     direction: in
    #     proto: tcp
    #   src: "{{ hostvars[item]['ansible_facts']['ens3']['ipv4']['address'] }}"
    #     dest: "{{ ansible_facts['ens3']['ipv4']['address'] }}"
    #     to_port: "{{ proxied_submission_port }}"
    #   loop: "{{ groups['rproxy_external'] }}"
    # - name: Allow localnet LMTP
    #   community.general.ufw:
    #     rule: allow
    #     interface: ens3
    #     direction: in
    #     proto: tcp
    # Join the following three lines on one line (and delete this one)
    # src: "{{ hostvars[item]['ansible_facts']['ens3']['ipv4']['network'] }}/
    # {{ hostvars[item]['ansible_facts']['ens3']['ipv4']['netmask'] }}"
    # yamllint disable-line
    #     dest: "{{ ansible_facts['ens3']['ipv4']['address'] }}"
    #     to_port: "{{ lmtp_port }}"
    #   loop: "{{ groups['mailbox_servers'] }}"
...
