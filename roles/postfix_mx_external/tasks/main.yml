---

- name: Use freshclam private mirror during testing to avoid rate limiting
  become: yes
  block:
  - name: Prevent freshclam install from modifying our configuration
    ansible.builtin.copy:
      content: conf_force_conffold=YES
      dest: /etc/ucf.conf
      group: root
      mode: "0644"
      owner: root
    when: local_freshclam_mirror is defined
  - name: Ensure clamav directory exists
    ansible.builtin.file:
      path: /etc/clamav
      group: root
      mode: "0755"
      owner: root
      state: directory
    when: local_freshclam_mirror is defined
  - name: Create freshclam configuration that uses private mirror
    # Note that use of a https://pypi.org/project/cvdupdate/ private
    # mirror is recommended during testing to avoid being rate limited.
    ansible.builtin.template:
      dest: /etc/clamav/freshclam.conf
      group: root
      mode: "0644"
      owner: root
      src: freshclam.conf.j2
    when: local_freshclam_mirror is defined
- name: Configure clamav-milter
  become: yes
  block:
  - name: Ensure postfix system group exists
    ansible.builtin.group:
      name: postfix
      state: present
      system: true
  - name: Set clamav milter log to syslog
    ansible.builtin.debconf:
      name: clamav-milter
      question: clamav-milter/LogSyslog
      value: "true"
      vtype: boolean
  - name: Support multiple recipients (clamav)
    ansible.builtin.debconf:
      name: clamav-milter
      question: clamav-milter/SupportMultipleRecipients
      value: "true"
      vtype: boolean
  - name: Set clamav milter to reject infected messages
    ansible.builtin.debconf:
      name: clamav-milter
      question: clamav-milter/OnInfected
      value: Reject
      vtype: select
  - name: Set clamav milter to log infected messages
    ansible.builtin.debconf:
      name: clamav-milter
      question: clamav-milter/LogInfected
      value: Basic
      vtype: select
  - name: Set clamav milter rejection messages for infected email
    ansible.builtin.debconf:
      name: clamav-milter
      question: clamav-milter/RejectMsg
      value: Rejected - detected malicious content in message (%v)
      vtype: string
  - name: Set clamav milter socket location
    ansible.builtin.debconf:
      name: clamav-milter
      question: clamav-milter/MilterSocket
      value: /var/spool/postfix/clamav/clamav-milter.ctl
      vtype: string
  - name: Set clamav milter socket group
    ansible.builtin.debconf:
      name: clamav-milter
      question: clamav-milter/MilterSocketGroup
      value: postfix
      vtype: string
  - name: Set clamav milter socket mode
    ansible.builtin.debconf:
      name: clamav-milter
      question: clamav-milter/MilterSocketMode
      value: "660"
      vtype: string
- name: Ensure postfix and milters are installed
  become: yes
  ansible.builtin.apt:
    name:
    - clamav-daemon
    - clamav-milter
    - fail2ban
    - libarchive-zip-perl
    - libio-string-perl
    - opendkim
    - opendmarc
    - postfix-policyd-spf-python
    - postfix
    - spamass-milter
    - spamassassin
- name: Ensure postfix is a member of opendkim and opendmarc
  become: yes
  ansible.builtin.user:
    name: postfix
    append: true
    home: /var/spool/postfix
    groups:
    - opendkim
    - opendmarc
    password_lock: true
    shell: /usr/sbin/nologin
    state: present
    system: true
  notify: Restart postfix
- name: Ensure opendkim socket directory exists
  become: yes
  ansible.builtin.file:
    dest: /var/spool/postfix/opendkim
    group: postfix
    mode: "0750"
    owner: opendkim
    state: directory
- name: Configure OpenDKIM
  become: yes
  ansible.builtin.template:
    dest: /etc/opendkim.conf
    group: root
    mode: "0644"
    owner: root
    src: opendkim.conf.j2
  notify: Restart opendkim
- name: Ensure private CA certificate (for verifying internal hosts) is present
  ansible.builtin.import_tasks: task-cert_private_ca.yml
  notify: Restart postfix
- name: Copy opendkim private keys from local to remote
  become: yes
  ansible.builtin.copy:
    dest: /etc/dkimkeys/{{ opendkim_private_key.selector }}.private
    group: opendkim
    mode: "0600"
    owner: opendkim
    src: "{{ opendkim_private_key.src_path }}/{{ opendkim_private_key.selector }}.private"
  notify: Restart opendkim
- name: Ensure opendmarc socket directory exists
  become: yes
  ansible.builtin.file:
    dest: /var/spool/postfix/opendmarc
    group: postfix
    mode: "0750"
    owner: opendmarc
    state: directory
- name: Configure OpenDMARC
  become: yes
  ansible.builtin.template:
    dest: /etc/opendmarc.conf
    group: root
    mode: "0644"
    owner: root
    src: opendmarc.conf.j2
  notify: Restart opendmarc
- name: Configure spamd startup
  become: yes
  ansible.builtin.copy:
    dest: /etc/default/spamassassin
    group: root
    mode: "0644"
    owner: root
    src: spamassassin.default
  notify: Restart spamd
- name: Configure spamassassin
  become: yes
  ansible.builtin.template:
    dest: /etc/spamassassin/local.cf
    group: root
    mode: "0644"
    owner: root
    src: local.cf.j2
  notify: Restart spamd
- name: Enable spamd
  become: yes
  ansible.builtin.systemd:
    name: spamassassin
    enabled: true
    state: started
- name: Configure spamass-milter startup
  become: yes
  ansible.builtin.copy:
    dest: /etc/default/spamass-milter
    group: root
    mode: "0644"
    owner: root
    src: spamass-milter.default
  notify: Restart spamass-milter
- name: Configure SPF policyd server
  become: yes
  ansible.builtin.copy:
    dest: /etc/postfix-policyd-spf-python/policyd-spf.conf
    group: root
    mode: "0644"
    owner: root
    src: policyd-spf.conf
  notify: Restart postfix
- name: Update freshclam service to fix systemd warning on start
  become: yes
  notify: Update clamav unit files and restart them
  ansible.builtin.copy:
    dest: /etc/systemd/system/clamav-freshclam.service
    group: root
    mode: "0644"
    owner: root
    src: clamav-freshclam.service
- name: Update clamav-daemon service to fix systemd warning on start
  become: yes
  notify: Update clamav unit files and restart them
  ansible.builtin.copy:
    dest: /etc/systemd/system/clamav-daemon.service
    group: root
    mode: "0644"
    owner: root
    src: clamav-daemon.service
- name: Ensure Postfix DH Param file is present (for SSL)
  become: yes
  ansible.builtin.template:
    dest: "{{ smtpd_dh_param_file }}"
    group: postfix
    mode: "0640"
    owner: root
    src: dhparam.j2
- name: Configure postfix main.cf
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/main.cf
    group: root
    mode: "0644"
    owner: root
    src: main.cf.j2
  notify: Restart postfix
- name: Configure postfix master.cf
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/master.cf
    group: root
    mode: "0644"
    owner: root
    src: master.cf.j2
  notify: Restart postfix
- name: Configure sender addresses which should only deliver locally
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/sender_default_transport_map
    group: root
    mode: "0644"
    owner: root
    src: sender_default_transport_map.j2
  notify: Rehash sender transport map
- name: Configure virtual mailboxes
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/vmailbox
    group: root
    mode: "0644"
    owner: root
    src: vmailbox.j2
  notify: Rehash virtual mailboxes
- name: Configure virtual aliases
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/virtual_aliases
    group: root
    mode: "0644"
    owner: root
    src: virtual_aliases.j2
  notify: Rehash virtual aliases
- name: Configure system email aliases
  become: yes
  ansible.builtin.template:
    dest: /etc/aliases
    group: root
    mode: "0644"
    owner: root
    src: aliases.j2
  notify: Apply email aliases
- name: Add Fail2Ban configuration for Postfix
  become: yes
  ansible.builtin.template:
    dest: /etc/fail2ban/jail.d/mx.local
    group: root
    mode: "0644"
    owner: root
    src: mx_jail.local.j2
  notify: Restart Fail2Ban
- name: Allow SMTP from external sources
  become: yes
  community.general.ufw:
    rule: allow
    direction: in
    proto: tcp
    to_port: "{{ smtp_port }}"
- name: Allow backup MX SMTP on alternate port
  become: yes
  community.general.ufw:
    rule: allow
    direction: in
    proto: tcp
    to_port: "{{ backupmx_port }}"
- name: Allow Submission on alternate port
  become: yes
  community.general.ufw:
    rule: allow
    direction: in
    proto: tcp
    to_port: "{{ submission_relay_port }}"
...
