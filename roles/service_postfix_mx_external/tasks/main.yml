---
- name: Ensure milters amd requirements are installed
  become: yes
  ansible.builtin.apt:
    name:
    - fail2ban
    - libarchive-zip-perl
    - libio-string-perl
    - opendkim
    - opendmarc
    - postfix-policyd-spf-python
    - spamass-milter
    - spamassassin
- name: Ensure postfix is a member of opendkim and opendmarc
  become: yes
  ansible.builtin.user:
    name: postfix
    append: true
    home: /var/spool/postfix
    groups:
    - opendkim
    - opendmarc
    password_lock: true
    shell: /usr/sbin/nologin
    state: present
    system: true
  notify: Restart postfix
- name: Ensure opendkim socket directory exists
  become: yes
  ansible.builtin.file:
    dest: /var/spool/postfix/opendkim
    group: postfix
    mode: "0750"
    owner: opendkim
    state: directory
- name: Configure OpenDKIM
  become: yes
  ansible.builtin.template:
    dest: /etc/opendkim.conf
    group: root
    mode: "0644"
    owner: root
    src: opendkim.conf.j2
  notify: Restart opendkim
- name: Ensure private CA certificate (for verifying internal hosts) is present
  ansible.builtin.include_tasks: task-cert_private_ca.yml
- name: Ensure private server certificate and key (for incoming bkmx) present
  ansible.builtin.include_tasks: task-cert_private_server.yml
- name: Ensure private client certificate and key (for lmtp)
  ansible.builtin.include_tasks: task-cert_private_client.yml
- name: Ensure public client certificate and key (for external)
  ansible.builtin.include_tasks: task-cert_public_local_full.yml
- name: Copy opendkim private keys from local to remote
  become: yes
  ansible.builtin.copy:
    dest: /etc/dkimkeys/{{ opendkim_private_key.selector }}.private
    group: opendkim
    mode: "0600"
    owner: opendkim
    src: "{{ opendkim_private_key.src_path }}/{{ opendkim_private_key.selector }}.private"
  notify: Restart opendkim
- name: Ensure opendmarc socket directory exists
  become: yes
  ansible.builtin.file:
    dest: /var/spool/postfix/opendmarc
    group: postfix
    mode: "0750"
    owner: opendmarc
    state: directory
- name: Configure OpenDMARC
  become: yes
  ansible.builtin.template:
    dest: /etc/opendmarc.conf
    group: root
    mode: "0644"
    owner: root
    src: opendmarc.conf.j2
  notify: Restart opendmarc
- name: Configure spamd startup
  become: yes
  ansible.builtin.copy:
    dest: /etc/default/spamassassin
    group: root
    mode: "0644"
    owner: root
    src: spamassassin.default
  notify: Restart spamd
- name: Configure spamassassin
  become: yes
  ansible.builtin.template:
    dest: /etc/spamassassin/local.cf
    group: root
    mode: "0644"
    owner: root
    src: local.cf.j2
  notify: Restart spamd
- name: Enable spamd
  become: yes
  ansible.builtin.systemd:
    name: spamassassin
    enabled: true
    state: started
- name: Configure spamass-milter startup
  become: yes
  ansible.builtin.copy:
    dest: /etc/default/spamass-milter
    group: root
    mode: "0644"
    owner: root
    src: spamass-milter.default
  notify: Restart spamass-milter
- name: Configure SPF policyd server
  become: yes
  ansible.builtin.copy:
    dest: /etc/postfix-policyd-spf-python/policyd-spf.conf
    group: root
    mode: "0644"
    owner: root
    src: policyd-spf.conf
  notify: Restart postfix
- name: Ensure Postfix DH Param file is present (for SSL)
  become: yes
  ansible.builtin.template:
    dest: "{{ smtpd_dh_param_file }}"
    group: postfix
    mode: "0640"
    owner: root
    src: dhparam.j2
- name: Configure postfix main.cf
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/main.cf
    group: root
    mode: "0644"
    owner: root
    src: main.cf.j2
  notify: Restart postfix
- name: Configure postfix master.cf
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/master.cf
    group: root
    mode: "0644"
    owner: root
    src: master.cf.j2
  notify: Restart postfix
- name: Configure sender addresses which should only deliver locally
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/sender_default_transport_map
    group: root
    mode: "0644"
    owner: root
    src: sender_default_transport_map.j2
  notify: Rehash sender transport map
- name: Configure virtual mailboxes
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/vmailbox
    group: root
    mode: "0644"
    owner: root
    src: vmailbox.j2
  notify: Rehash virtual mailboxes
- name: Configure virtual aliases
  become: yes
  ansible.builtin.template:
    dest: /etc/postfix/virtual_aliases
    group: root
    mode: "0644"
    owner: root
    src: virtual_aliases.j2
  notify: Rehash virtual aliases
- name: Configure system email aliases
  become: yes
  ansible.builtin.template:
    dest: /etc/aliases
    group: root
    mode: "0644"
    owner: root
    src: aliases.j2
  notify: Apply email aliases
- name: Add Fail2Ban configuration for Postfix
  become: yes
  ansible.builtin.template:
    dest: /etc/fail2ban/jail.d/mx.local
    group: root
    mode: "0644"
    owner: root
    src: mx_jail.local.j2
  notify: Restart Fail2Ban
- name: Allow SMTP from external sources
  become: yes
  community.general.ufw:
    rule: allow
    direction: in
    proto: tcp
    to_port: "{{ smtp_port }}"
- name: Allow backup MX SMTP on alternate port
  become: yes
  community.general.ufw:
    rule: allow
    direction: in
    proto: tcp
    to_port: "{{ backupmx_port }}"
- name: Allow Submission on alternate port
  become: yes
  community.general.ufw:
    rule: allow
    direction: in
    proto: tcp
    to_port: "{{ submission_relay_port }}"
...
